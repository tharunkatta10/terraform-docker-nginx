
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # docker_container.nginx_container[0m will be created
[0m  [32m+[0m[0m resource "docker_container" "nginx_container" {
      [32m+[0m[0m attach                                      = false
      [32m+[0m[0m bridge                                      = (known after apply)
      [32m+[0m[0m command                                     = (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [32m+[0m[0m container_read_refresh_timeout_milliseconds = 15000
      [32m+[0m[0m entrypoint                                  = (known after apply)
      [32m+[0m[0m env                                         = (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [32m+[0m[0m hostname                                    = (known after apply)
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m image                                       = "nginx:latest"
      [32m+[0m[0m init                                        = (known after apply)
      [32m+[0m[0m ipc_mode                                    = (known after apply)
      [32m+[0m[0m log_driver                                  = (known after apply)
      [32m+[0m[0m logs                                        = false
      [32m+[0m[0m must_run                                    = true
      [32m+[0m[0m name                                        = "my_nginx"
      [32m+[0m[0m network_data                                = (known after apply)
      [32m+[0m[0m read_only                                   = false
      [32m+[0m[0m remove_volumes                              = true
      [32m+[0m[0m restart                                     = "no"
      [32m+[0m[0m rm                                          = false
      [32m+[0m[0m runtime                                     = (known after apply)
      [32m+[0m[0m security_opts                               = (known after apply)
      [32m+[0m[0m shm_size                                    = (known after apply)
      [32m+[0m[0m start                                       = true
      [32m+[0m[0m stdin_open                                  = false
      [32m+[0m[0m stop_signal                                 = (known after apply)
      [32m+[0m[0m stop_timeout                                = (known after apply)
      [32m+[0m[0m tty                                         = false
      [32m+[0m[0m wait                                        = false
      [32m+[0m[0m wait_timeout                                = 60

      [32m+[0m[0m ports {
          [32m+[0m[0m external = 8080
          [32m+[0m[0m internal = 80
          [32m+[0m[0m ip       = "0.0.0.0"
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # docker_image.nginx_image[0m will be created
[0m  [32m+[0m[0m resource "docker_image" "nginx_image" {
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m image_id     = (known after apply)
      [32m+[0m[0m keep_locally = false
      [32m+[0m[0m name         = "nginx:latest"
      [32m+[0m[0m repo_digest  = (known after apply)
    }

[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m[1mdocker_image.nginx_image: Creating...[0m[0m
[0m[1mdocker_image.nginx_image: Creation complete after 5s [id=sha256:4cad75abc83d5ca6ee22053d85850676eaef657ee9d723d7bef61179e1e1e485nginx:latest][0m
[0m[1mdocker_container.nginx_container: Creating...[0m[0m
[0m[1mdocker_container.nginx_container: Creation complete after 1s [id=474548dc998a6fa775385bbd6cfbdb60b5758e3e1952b11cca2326efb980d939][0m
[0m[1m[32m
Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
[0m